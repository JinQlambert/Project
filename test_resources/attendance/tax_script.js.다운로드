	function GetOriginStr(str, decPt)
	{
		var strOrigin="";
		var cnt=0;
		var decCnt=-1;
		for (var i=0; i<str.length; i++)
		{
			if ((str.charAt(i) >= "0" && str.charAt(i) <= "9"))
			{
				if (decCnt > -1)
				{
					if (++decCnt <= decPt)
					{
						strOrigin+=str.charAt(i);
						cnt++;
					}
					else
					{
						return strOrigin;
					}
				}
				else
				{
					strOrigin+=str.charAt(i);
					cnt++;
				}
			}
			else if (str.charAt(i) == ".")
			{
				if (decCnt == -1)
				{
					strOrigin+=str.charAt(i);
					decCnt++;
				}
			}
			else if (i == 0 && str.charAt(i) == "-")
			{
				strOrigin+=str.charAt(i);
			}
		}
		return strOrigin;
	}
	
	function MakeMoney(str)
	{
		var i=0, j=0, cnt=str.indexOf(".");
		var strFormed="";

		if (cnt == -1)
			cnt=str.length;
			
		for(i=0; i<cnt%3; i++)
		{
			strFormed+=str.charAt(i);
		}

		if (cnt/3 > 1 && cnt%3 != 0)
		{
			strFormed+=",";
		}

		for(i=cnt%3; i<cnt; i++,j++)
		{
			if (j==3)
			{
				strFormed+=","+str.charAt(i);
				j=0;
			}
			else
			{
				strFormed+=str.charAt(i);
			}
		}
		strFormed+=str.substr(cnt, str.length-cnt);
		return strFormed;
	}

function SetMoneyForm(edit, decPt) {
		
	var strOrigin=GetOriginStr(edit.value, decPt);
	
	edit.value=MakeMoney(strOrigin);
}

function SetMoney(edit, decPt) {
	
	var aaa = MakeMoney(edit);
	return MakeMoney(aaa);
}

function CurrencyValue() {
	var Cur_Arg = CurrencyValue.arguments
	var Cur_Val=Cur_Arg[0]+""
	var TaxArr=new Array()
	TaxArr = Cur_Val.split(",")
	Cur_Val=""
	for (var i=0; i<TaxArr.length; i++) {
		Cur_Val += TaxArr[i]
	}
	Cur_Val = parseInt(Cur_Val)
	return Cur_Val
}

/**
 *  주민등록번호의 유효성을 체크한다.
*/

function isValidJuminNo(juminno) {
  if(juminno=="" || juminno==null || juminno.length!=13) {
    alert("주민등록번호를 적어주세요.");
    return false;
  }
  
  var jumin1 = juminno.substr(0,6);
  var jumin2 = juminno.substr(6,7);
  var yy     = jumin1.substr(0,2);        // 년도
  var mm     = jumin1.substr(2,2);        // 월
  var dd     = jumin1.substr(4,2);        // 일
  var genda  = jumin2.substr(0,1);        // 성별
  var msg, ss, cc;

  // 숫자가 아닌 것을 입력한 경우
  if (!isNumeric(jumin1)) {
    alert("주민등록번호 앞자리를 숫자로 입력하세요.");
    return false;
  }
  
  // 길이가 6이 아닌 경우
  if (jumin1.length != 6) {
    alert("1.주민등록번호 앞자리를 다시 입력하세요.");
    return false;
  }
  
  // 첫번째 자료에서 연월일(YYMMDD) 형식 중 기본 구성 검사
  if (yy < "00" || yy > "99" || mm < "01" || mm > "12" || dd < "01" || dd > "31") {
    alert("2.주민등록번호 앞자리를 다시 입력하세요.");
    return false;
  }
  
  // 숫자가 아닌 것을 입력한 경우
  if (!isNumeric(jumin2)) {
    alert("주민등록번호 뒷자리를 숫자로 입력하세요.");
    return false;
  }

  // 길이가 7이 아닌 경우
  if (jumin2.length != 7) {
    alert("1.주민등록번호 뒷자리를 다시 입력하세요.");
    return false;
  }
  
  // 성별부분이 1 ~ 4 가 아닌 경우
  if (genda < "1" || genda > "4") {
    alert("2.주민등록번호 뒷자리를 다시 입력하세요.");
    return false;
  }
 
  // 연도 계산 - 1 또는 2: 1900년대, 3 또는 4: 2000년대
  cc = (genda == "1" || genda == "2") ? "19" : "20";
  // 첫번째 자료에서 연월일(YYMMDD) 형식 중 날짜 형식 검사
  
  if (isValidDate(cc+yy+mm+dd) == false) {
     alert("3.주민등록번호 앞자리를 다시 입력하세요.");
     return false;
  }
     
  // Check Digit 검사
  if (!isSSN(jumin1, jumin2)) {
    alert("형식에 맞지않는 주민번호입니다. 확인 후 다시 입력하세요.");
    return false;
  }

  return true;
}

function isValidDate(iDate) {
  if( iDate.length != 8 ) {
    return false;
  }
  
  var yy = iDate.substring(0, 4);
  var mm = iDate.substring(4, 6);
  var dd = iDate.substring(6);
  
  // 자바스크립트에서 월의 입출력 범위는 0-11
  --mm; 
   
  var oDate = new Date(yy,mm,dd);

  if( oDate.getFullYear() !=  yy
      || oDate.getMonth() !=  mm
      || oDate.getDate()  !=  dd){

    alert(oDate.getFullYear());
    return false;
  }

  return true;
}

function DateCmp(date1, date2) {
  var s_date1 = date1 + "";
  var s_date2 = date2 + "";
  
  if (s_date1 >  s_date2)
  {
     return false;
  }

  return true;
}
  
 

function isNumeric(s) { 
  for (i=0; i<s.length; i++) { 
    c = s.substr(i, 1); 
    if (c < "0" || c > "9") return false; 
  } 
  return true; 
}

 

function isSSN(s1, s2) {
  n = 2;
  sum = 0;
  for (i=0; i<s1.length; i++)
    sum += parseInt(s1.substr(i, 1)) * n++;
  for (i=0; i<s2.length-1; i++) {
    sum += parseInt(s2.substr(i, 1)) * n++;
    if (n == 10) n = 2;
  }
  
  c = 11 - sum % 11;
  if (c == 11) c = 1;
  if (c == 10) c = 0;
  if (c != parseInt(s2.substr(6, 1))) return false;
  else return true;
}

// 숫자에 3자리마다 콤마찍기(현금표시)
function Format_comma(val1){
  var newValue = val1+""; //숫자를 문자열로 변환
  var len = newValue.length;  
  var ch="";
  var j=1;
  var formatValue="";
  
  // 콤마제거  
  newValue = newValue.replace(/\,/gi, ' ');
  
  // comma제거된 문자열 길이
  len = newValue.length;
  
  for(i=len ; i>0 ; i--){
   ch = newValue.substring(i-1,i);
   formatValue = ch + formatValue;
   if ((j%3) == 0 && i>1 ){
    formatValue=","+formatValue;
   }
   j++
  }
  return formatValue;
}

// 콤마제거
function Format_NoComma(val1){
  return (val1+"").replace(/\,/gi, '');
}